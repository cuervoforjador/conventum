import{helperBackend as t}from"../helpers/helperBackend.js";import{helperSheets as e}from"../helpers/helperSheets.js";import{helperUtils as s}from"../helpers/helperUtils.js";import{backCombat as i}from"./backCombat.js";export class backSheet{_actor=null;_sheet=null;_context=null;_systemData={};_configModes=[];_backModes={};_backCombat=null;_backLore={rules:[],coin:"",hUnit:"",wUnit:"",custo:{frameH:"/systems/aquelarre/assets/codex/border01H.png",frameV:"/systems/aquelarre/assets/codex/border01V.png",frameQ:"/systems/aquelarre/assets/codex/border01Q.png",paper:"/systems/aquelarre/assets/codex/paper01.png"},kingdom:{label:game.i18n.localize("common.noKingdom"),noItem:!0,item:null},nation:{label:game.i18n.localize("common.noNation"),noItem:!0,item:null},society:{label:game.i18n.localize("common.noSociety"),noItem:!0,item:null},position:{label:game.i18n.localize("common.noPosition"),noItem:!0,item:null},stratum:{label:game.i18n.localize("common.noStratum"),noItem:!0,item:null},profession:{label:game.i18n.localize("common.noProfession"),noItem:!0,item:null,initial:!1},paternProfession:{label:game.i18n.localize("common.noProfession"),noItem:!0,item:null},weaponLevels:{}};_backProfession={initialExperience:0,initialExperienceMax:100,paternExperience:0,paternExperienceMax:25};_backArmor={imgBackground:"vitrMan.png",items:[],noItems:!0,locations:{}};_skills=[];_selectedSkill={item:null,key:"",id:"",empty:!1};_traits=[];_traitsStats={pride:0,shame:0};_sequels=[];_modes=[];_actorTab={charOctagon:{center:{x:"50%",y:"50%"},points:[{x:"29.5%",y:"0%"},{x:"70.5%",y:"0%"},{x:"100%",y:"29.5%"},{x:"100%",y:"70.5%"},{x:"70.5%",y:"100%"},{x:"29.5%",y:"100%"},{x:"0%",y:"70.5%"},{x:"0%",y:"29.5%"}],paths:[],polygon:"",chars:[]}};constructor(t,e,s){this._actor=t,this._sheet=s,this._context=e,this._systemData=e.systemData,this._backCombat=new i(t,e,s)}async init(){try{this._configModes=t.configModes(),await this._initLore(),this._initTraits(),this._initSequels(),this._initSkills(),this._initSelectedSkill(),this._initActorTab(),this._initProfession(),this._initArmor(),this._checkHealth(),this._getModes(),this._initModes(),this._syncLore(),this._syncTraits(),this._syncSkills(),this._syncActorTab(),this._syncCombat(),this._syncProfession(),this._syncArmor(),this._syncModes()}catch(e){ui.notifications.error(e)}}_initActorTab(){let t=this._actorTab.charOctagon,e="",i=0;for(var a in this._actor.system.characteristics){let o=this._actor.system.characteristics[a];try{let r=Number(s.getChar(this._actor.system,a))/Number(o.max-o.min),l=this._getNumericPoint(this._getPercentPoint(t.center,t.points[i],r));e+=""===e?"":" ",e+=l.x+","+l.y;let n=this._actorTab.charOctagon.points[i].x.split("%")[0],c=this._actorTab.charOctagon.points[i].y.split("%")[0];this._actorTab.charOctagon.paths.push({index:i,path:`M50 50 L${n} ${c} Z`}),this._actorTab.charOctagon.chars.push({id:a,label:game.i18n.localize("characteristics."+a),title:game.i18n.localize("characteristics."+a+"_short"),total:s.getChar(this._actor.system,a),value:o.value,mod:o.mod,x:l.x.toString()+"%",y:l.y.toString()+"%",index:i})}catch(m){}i++}this._actorTab.charOctagon.polygon=e}_getPercentPoint(t,e,s){let i=this._getNumericPoint(t),a=this._getNumericPoint(e);return this._setPercentPoint({x:i.x+Number(((a.x-i.x)*s).toFixed(2)),y:i.y-Number(((i.y-a.y)*s).toFixed(2))})}_getNumericPoint(t){return{x:Number(t.x.split("%")[0]),y:Number(t.y.split("%")[0])}}_setPercentPoint(t){return{x:t.x.toString()+"%",y:t.y.toString()+"%"}}async _initLore(){this._backLore.rules=t.configRules(),this._backLore.coin=game.settings.get(game.system.id,"loreCoin"),this._backLore.hUnit=game.settings.get(game.system.id,"loreHUnit"),this._backLore.wUnit=game.settings.get(game.system.id,"loreWUnit"),this._getLoreItem("loreKingdom","kingdom"),this._getLoreItem("loreNation","nation"),this._getLoreItem("loreSociety","society"),this._getLoreItem("loreStratum","stratum"),this._getLoreItem("lorePosition","position"),this._getProfession(),this._getPaternProfession(),this._checkLoreCohesion(),this._custoLore(),this._backLore.weaponLevels=t.configWeaponsLevels()}_getLoreItem(t,e){let s=this._actor.items.find(e=>e.type===t);s&&(this._backLore[e]={...this._backLore[e],noItem:!1,item:s,label:s.name})}_getProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&!t.system.patern);t&&(this._backLore.profession={...this._backLore.profession,noItem:!1,item:t,label:t.name,initial:t.system.initial})}_getPaternProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.patern);t&&(this._backLore.paternProfession={...this._backLore.paternProfession,noItem:!1,item:t,label:t.name})}_checkLoreCohesion(){this._backLore.kingdom.noItem&&(this._backLore.nation=this._clearLore("noNation")),this._backLore.nation.noItem&&(this._backLore.society=this._clearLore("noSociety"),this._backLore.stratum=this._clearLore("noStratum")),this._backLore.stratum.noItem&&(this._backLore.position=this._clearLore("noPosition"))}_custoLore(){this._backLore.custo.frameH=this._getImageByHeritage("frameH"),this._backLore.custo.frameV=this._getImageByHeritage("frameV"),this._backLore.custo.frameQ=this._getImageByHeritage("frameQ"),this._backLore.custo.paper=this._getImageByHeritage("paper")}_getImageByHeritage(t){return this._backLore.profession.item?.system.custo[t]&&""!==this._backLore.profession.item?.system.custo[t]?this._backLore.profession.item?.system.custo[t]:this._backLore.position.item?.system.custo[t]&&""!==this._backLore.position.item?.system.custo[t]?this._backLore.position.item?.system.custo[t]:this._backLore.stratum.item?.system.custo[t]&&""!==this._backLore.stratum.item?.system.custo[t]?this._backLore.stratum.item?.system.custo[t]:this._backLore.nation.item?.system.custo[t]&&""!==this._backLore.nation.item?.system.custo[t]?this._backLore.nation.item?.system.custo[t]:this._backLore.kingdom.item?.system.custo[t]&&""!==this._backLore.kingdom.item?.system.custo[t]?this._backLore.kingdom.item?.system.custo[t]:this._backLore.society.item?.system.custo[t]&&""!==this._backLore.society.item?.system.custo[t]?this._backLore.society.item?.system.custo[t]:this._backLore.custo[t]}_clearLore(t){return{label:game.i18n.localize("common."+t),noItem:!0,item:null}}_initTraits(){this._traits=[];let t=this._getItemsByType("trait");0!==(t=t.filter(t=>!t.system.extend.sequel)).length&&(this._sortByName(t),t.sort((t,e)=>t.system.extend.pride?-1:t.system.extend.pride||e.system.extend.shame?0:1),t.map(t=>{this._traits.push({name:t.name,id:t.system.control.key,type:t.system.extend.pride?"pride":t.system.extend.shame?"shame":"",typeTxt:t.system.extend.pride?game.i18n.localize("common.pride"):t.system.extend.shame?game.i18n.localize("common.shame"):"",color:t.system.extend.pride?"#20417f2e":t.system.extend.shame?"#53090926":"transparent",item:t}),t.system.extend.pride&&(this._traitsStats.pride+=t.system.extend.points),t.system.extend.shame&&(this._traitsStats.shame+=t.system.extend.points)}))}_initSequels(){this._sequels=[];let t=this._getItemsByType("trait");0!==(t=t.filter(t=>t.system.extend.sequel)).length&&(this._sortByName(t),this._sequels=t)}_initSkills(){this._skills=[];let t=this._getItemsByType("skill");if(0===t.length)return;let e=t.filter(t=>""===t.system.extend.parent);this._sortByName(e),e.sort((t,e)=>t.system.extend.combat&&!e.system.extend.combat?1:!t.system.extend.combat&&e.system.extend.combat?-1:0);let i=0,a=0;e.map(e=>{let s=t.filter(t=>t.system.extend.parent===e.system.control.key);e.system.extend.group=s.length>0,e.system.extend.specialty=!1,e.system.extend.group?(a++,e.system.extend.groupIndex=a,this._skills.push(e),this._sortByName(s),s.map(t=>{t.system.extend.group=!1,t.system.extend.sortName=e.name+"_"+t.name,t.system.extend.groupIndex=a,this._skills.push(t)})):(e.system.extend.sortName=e.name,e.system.extend.groupIndex=0,this._skills.push(e)),i++}),this._systemData.control.skills.sortByValue&&this._skills.sort((t,e)=>Number(this._systemData.skills[t.system.control.key].value)<Number(this._systemData.skills[e.system.control.key].value)?1:Number(this._systemData.skills[t.system.control.key].value)>Number(this._systemData.skills[e.system.control.key].value)?-1:0),this._systemData.control.skills.onlyFavorites&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].favorite)),this._systemData.control.skills.onlyLearned&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].checked)),this._systemData.control.skills.onlyByProfession&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].primary||this._systemData.skills[t.system.control.key].secondary||this._systemData.skills[t.system.control.key].patern)),this._systemData.control.skills.search&&""!==this._systemData.control.skills.search&&(this._skills=this._skills.filter(t=>t.name.toLowerCase().includes(this._systemData.control.skills.search.toLowerCase()))),$("body").width();let o=Math.ceil(this._skills.length/2);i=0,this._backProfession.initialExperience=0,this._backProfession.paternExperience=0,this._skills.map(t=>{let e=t.system.control.key;if(!e)return;t.system.extend.column=Math.trunc(i/o)+1,void 0===this._systemData.skills[e]&&(this._systemData.skills[e]={key:e,value:0,modBase:"+0",mod:"+0",mult:"1",checked:!1,favorite:!1,primary:!1,secondary:!1,patern:!1});let a=this._systemData.skills[e];if(!a)return;if(a.initial=s.getChar(this._systemData,t.system.extend.characteristic),a.value=Number(a.value),a.value<a.initial&&(a.value=a.initial),a.modBase=s.checkMod(a.modBase),a.mod=s.checkMod(a.mod),a.mult=s.checkMult(a.mult),a.order=i,a.group=t.system.extend.group,a.groupIndex=t.system.extend.groupIndex,a.column=t.system.extend.column,a.primary){let r=3*s.getChar(this._systemData,t.system.extend.characteristic);a.value<r&&(a.value=r),a.initial=r}a.initial=a.initial?a.initial:0;let l=a.primary?1:a.secondary?1:a.patern?1:2;a.patern?this._backProfession.paternExperience+=(a.value-a.initial)*l:this._backProfession.initialExperience+=(a.value-a.initial)*l,a.valueTotal=s.calcValueTotal(a),i++})}_initSelectedSkill(){let t=this._systemData.control.skills.lastSkill,e=this._skills.find(e=>e._id===t);this._selectedSkill={...this._selectedSkill,key:t,item:e,id:e?.id,empty:!e}}async _syncLore(){this._context.backLore=this._backLore}async _syncTraits(){this._context.backTraits=this._traits,this._context.backTraitsStats=this._traitsStats,this._context.backSequels=this._sequels}async _syncSkills(){this._context.backSkills=this._skills,this._context.selectedSkill=this._selectedSkill}async _syncActorTab(){this._context.backActor=this._actorTab}_compareSyncSkill(t,e){return Number(t.system.value)===Number(e.value)&&s.checkMod(t.system.modBase)===s.checkMod(e.modBase)&&s.checkMod(t.system.mod)===s.checkMod(e.mod)&&s.checkMult(t.system.mult)===s.checkMult(e.mult)&&t.system.checked===e.checked}async _syncCombat(){this._context.backCombat=this._backCombat}_initProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.initial);t?.system.initial&&this._dialogProfession();let e=this._actor.items.find(t=>"loreProfession"===t.type&&!t.system.patern);e&&(e.system.minChars.map(t=>{this._systemData.characteristics[t.key]&&(this._systemData.characteristics[t.key].min=Number(t.value),this._systemData.characteristics[t.key].value=this._systemData.characteristics[t.key].value<this._systemData.characteristics[t.key].min?this._systemData.characteristics[t.key].min:this._systemData.characteristics[t.key].value)}),this._systemData.lockFemale=!1,e&&e.system.extend.female&&(this._systemData.attributes.female=!0,this._systemData.lockFemale=!0),e&&e.system.extend.male&&(this._systemData.attributes.female=!1,this._systemData.lockFemale=!0))}_dialogProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.initial);if(!t)return;let e=[],s=[],i=[],a=[],o=this._actor.items.filter(t=>"skill"===t.type);t.system.primarySkills.map(t=>{t.group=""===t.group?0:t.group,e.findIndex(e=>e===t.group)>=0||e.push(t.group)}),t.system.secondarySkills.map(t=>{t.group=""===t.group?0:t.group,i.findIndex(e=>e===t.group)>=0||i.push(t.group)}),[e,i].map((e,i)=>{let r=0===i?s:a,l=0===i?t.system.primarySkills:t.system.secondarySkills;e.map(t=>{l.filter(e=>e.group===t).map(e=>{let s=o.find(t=>t.system.control.key===e.key);s?r.push({group:t,auto:0===t,key:e.key,error:!1,skill:s}):r.push({group:t,auto:0===t,key:e.key,error:!0,skill:{id:"error",img:"/systems/aquelarre/assets/icons/cancel.svg",name:"(ERROR: "+e.key+") "+game.i18n.localize("common.noSkill")}})})})});let r=`<formHeader>${game.i18n.localize("common.configProfession")}: ${t.name}</formHeader>`,l="";l+='<div class="_rows"><div class="_column">',l+=`<formTitle>${game.i18n.localize("common.primarySkills")}</formTitle>`,e.map(t=>{l+='<formItems data-singular="true">',s.filter(e=>e.group===t).map((e,s)=>{l+=`<formItem data-group="${t}"
                                      data-id="${e.skill.id}"
                                      data-key="${e.key}"
                                      data-primary="true"
                                      data-choice="${e.auto?"true":"false"}">

                                <img for="skillPrimary_${t}_${e.skill.id}"
                                     class="_itemIcon" src="${e.skill.img}" />
                                <input type="checkbox"
                                    id="skillPrimary_${t}_${e.skill.id}"
                                    name="skillPrimary_${t}_${e.skill.id}"
                                    data-key="${e.key}"
                                    data-actorid="${this._actor.id}"
                                    data-tokenid="${this._actor.token?.id}"
                                    data-group="${t}"
                                    data-primary="true"
                                    data-secondary="false"
                                    ${0===t||0===s?" checked":""}
                                    ${0===t?" disabled":""}                                    
                                    data-skillid="${e.skill.id}"/> 

                                <label for="skillPrimary_${t}_${e.skill.id}">${e.skill.name}</label>
                            </formItem>`}),l+="</formItems>"}),l+="</div>",l+='<div class="_column">',l+=`<formTitle>${game.i18n.localize("common.secondarySkills")}</formTitle>`,i.map(t=>{l+='<formItems data-singular="true">',a.filter(e=>e.group===t).map((e,s)=>{l+=`<formItem data-group="${t}"
                                      data-id="${e.skill.id}"
                                      data-key="${e.key}"
                                      data-primary="true"
                                      data-choice="${e.auto?"true":"false"}">

                                <img for="skillSecondary_${t}_${e.skill.id}"
                                     class="_itemIcon" src="${e.skill.img}" />
                                <input type="checkbox"                                    
                                    id="skillSecondary_${t}_${e.skill.id}"
                                    name="skillSecondary_${t}_${e.skill.id}"
                                    data-key="${e.key}"
                                    data-actorid="${this._actor.id}"
                                    data-tokenid="${this._actor.token?.id}"
                                    data-group="${t}"
                                    data-primary="false"
                                    data-secondary="true"
                                    ${0===t||0===s?" checked":""}
                                    ${0===t?" disabled":""}
                                    data-skillid="${e.skill.id}"/> 

                                <label for="skillSecondary_${t}_${e.skill.id}">${e.skill.name}</label>
                            </formItem>`}),l+="</formItems>"}),l+="</div></div>";let n=new Dialog({title:game.i18n.localize("common.configProfession"),content:"<formDialog>"+r+l+"</formDialog>",buttons:{accept:{label:game.i18n.localize("common.accept"),callback:async(e,s)=>{let i=[];$(e).find("._rows").find("input:checked").each(function(t,e){i.push({actorId:$(e).data("actorid"),tokenId:"undefined"!==$(e).data("tokenid")?$(e).data("tokenid"):void 0,primary:$(e).data("primary"),secondary:$(e).data("secondary"),group:$(e).data("group"),key:$(e).data("key")})}),backSheet._setUpProfession(this._actor,t,i)}}}});n.options.classes=["dialog","_formDialog","_professionDialog"],n.render(!0,{top:"5%"})}static async _setUpProfession(t,e,s){let i=e.system.config,a={};s.map(t=>{i.skills[t.key]={primary:t.primary,secondary:t.secondary};let s="system.skills."+t.key;e.system.patern?a[s+".patern"]=!0:(a[s+".primary"]=t.primary,a[s+".secondary"]=t.secondary)}),await e.update({"system.initial":!1,"system.config":i}),await t.update(a)}async _syncProfession(){this._context.backProfession=this._backProfession}_initArmor(){this._backArmor.actorType=this._context.data.type,this._backArmor.locations=t.configLocations(!1,this._backArmor.actorType),this._backArmor.items=this._actor.items.filter(t=>"armor"===t.type),this._backArmor.items.sort(s.byName),this._backArmor.noItems=0===this._backArmor.items.length,this._backArmor.locations.map(t=>{t.armor=this._backArmor.items.find(e=>e.system.location[t.key].checked&&e.system.control.inUse),t.armored=!!t.armor,t.armorStatus={value:0,color:"#00000000"},t.armor&&(t.armorStatus.value=Math.round(t.armor.system.endurance/t.armor.system.endInitial*100),t.armorStatus.color=t.armorStatus.value<10?"#f30b0bcc":t.armorStatus.value<25?"#f9684fcc":t.armorStatus.value<50?"#f9c64fcc":t.armorStatus.value<75?"#e5f94fc7":"#4ff94fc7")}),this._backArmor.imgBackground=this._context.systemData.attributes.female?"vitrWoman.png":"vitrMan.png"}async _syncArmor(){this._context.backArmor=this._backArmor}async _syncModes(){this._context.backModes=this._backModes}_getModes(){this._modes=e.getModes(this._actor)}_initModes(){this._systemData.modes&&0!==this._systemData.modes.length&&this._systemData.modes.map(t=>{let e=this._configModes.find(e=>e.key===t);e&&(this._backModes[t]={...e,img:s.assetsPath()+"/modes/"+e.img,label:e.name})})}async _syncModes(){this._context.backModes=this._backModes}async _checkHealth(){for(var t in this._systemData.modes=this._systemData.modes.filter(t=>"s0"!==t&&"s1"!==t&&"s2"!==t&&"s3"!==t&&"s4"!==t),this._systemData.lifeStatus){if(this._systemData.lifeStatus[t].acquired)!this._configModes.find(e=>e.key===t)||this._systemData.modes.find(e=>e===t)||this._systemData.modes.push(t)}}_getItemsByType(t){let e=this._actor.items.filter(e=>e.type===t);return e.sort(s.byName),e}_sortByName(t){t.sort(s.byName)}}