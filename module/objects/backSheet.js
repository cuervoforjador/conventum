import{helperBackend as t}from"../helpers/helperBackend.js";import{helperSheets as s}from"../helpers/helperSheets.js";import{helperUtils as e}from"../helpers/helperUtils.js";import{backCombat as i}from"./backCombat.js";export class backSheet{_actor=null;_sheet=null;_context=null;_systemData={};_configModes=[];_backModes={};_backCombat=null;_backLore={rules:[],coin:"",hUnit:"",wUnit:"",custo:{frameH:"/systems/aquelarre/assets/codex/border01H.png",frameV:"/systems/aquelarre/assets/codex/border01V.png",frameQ:"/systems/aquelarre/assets/codex/border01Q.png",paper:"/systems/aquelarre/assets/codex/paper01.png"},kingdom:{label:game.i18n.localize("common.noKingdom"),noItem:!0,item:null},nation:{label:game.i18n.localize("common.noNation"),noItem:!0,item:null},society:{label:game.i18n.localize("common.noSociety"),noItem:!0,item:null},position:{label:game.i18n.localize("common.noPosition"),noItem:!0,item:null},stratum:{label:game.i18n.localize("common.noStratum"),noItem:!0,item:null},profession:{label:game.i18n.localize("common.noProfession"),noItem:!0,item:null,initial:!1},paternProfession:{label:game.i18n.localize("common.noProfession"),noItem:!0,item:null},weaponLevels:{}};_backProfession={initialExperience:0,initialExperienceMax:100,paternExperience:0,paternExperienceMax:25,profession:null,text:"",hasProfession:!1,income:{isFormula:!1,value:0,text:"",payed:!1}};_backArmor={imgBackground:"vitrMan.png",items:[],noItems:!0,locations:{}};_backEquipment={imgBackground:"",items:[],noItems:!0};_backBooks={imgBackground:"",items:[],noItems:!0};_backWeapons={imgBackground:"",items:[],noItems:!0};_backHoldings={imgBackground:"",holdings:[],noItems:!0};_itemDetail={show:!1,item:null};_items=[];_skills=[];_selectedSkill={item:null,key:"",id:"",empty:!1};_traits=[];_traitsStats={pride:0,shame:0};_sequels=[];_modes=[];_actorTab={charOctagon:{center:{x:"50%",y:"50%"},points:[{x:"29.5%",y:"0%"},{x:"70.5%",y:"0%"},{x:"100%",y:"29.5%"},{x:"100%",y:"70.5%"},{x:"70.5%",y:"100%"},{x:"29.5%",y:"100%"},{x:"0%",y:"70.5%"},{x:"0%",y:"29.5%"}],paths:[],polygon:"",chars:[]}};constructor(t,s,e){this._actor=t,this._sheet=e,this._context=s,this._systemData=s.systemData,this._backCombat=new i(t,s,e)}async init(){try{this._configModes=t.configModes(),await this._initLore(),this._initTraits(),this._initSequels(),this._initSkills(),this._initSelectedSkill(),this._initActorTab(),this._initProfession(),this._initArmor(),await this._initEquipment(),this._checkHealth(),this._getModes(),this._initModes(),this._syncLore(),this._syncTraits(),this._syncSkills(),this._syncActorTab(),this._syncCombat(),this._syncProfession(),this._syncArmor(),this._syncEquipment(),this._syncModes()}catch(s){ui.notifications.error(s)}}_initActorTab(){let t=this._actorTab.charOctagon,s="",i=0;for(var o in this._actor.system.characteristics){let a=this._actor.system.characteristics[o];try{let r=Number(e.getChar(this._actor.system,o))/Number(a.max-a.min),n=this._getNumericPoint(this._getPercentPoint(t.center,t.points[i],r));s+=""===s?"":" ",s+=n.x+","+n.y;let l=this._actorTab.charOctagon.points[i].x.split("%")[0],m=this._actorTab.charOctagon.points[i].y.split("%")[0];this._actorTab.charOctagon.paths.push({index:i,path:`M50 50 L${l} ${m} Z`}),this._actorTab.charOctagon.chars.push({id:o,label:game.i18n.localize("characteristics."+o),title:game.i18n.localize("characteristics."+o+"_short"),total:e.getChar(this._actor.system,o),value:a.value,mod:a.mod,x:n.x.toString()+"%",y:n.y.toString()+"%",index:i})}catch(c){}i++}this._actorTab.charOctagon.polygon=s}_getPercentPoint(t,s,e){let i=this._getNumericPoint(t),o=this._getNumericPoint(s);return this._setPercentPoint({x:i.x+Number(((o.x-i.x)*e).toFixed(2)),y:i.y-Number(((i.y-o.y)*e).toFixed(2))})}_getNumericPoint(t){return{x:Number(t.x.split("%")[0]),y:Number(t.y.split("%")[0])}}_setPercentPoint(t){return{x:t.x.toString()+"%",y:t.y.toString()+"%"}}async _initLore(){this._backLore.rules=t.configRules(),this._backLore.coin=game.settings.get(game.system.id,"loreCoin"),this._backLore.hUnit=game.settings.get(game.system.id,"loreHUnit"),this._backLore.wUnit=game.settings.get(game.system.id,"loreWUnit"),this._getLoreItem("loreKingdom","kingdom"),this._getLoreItem("loreNation","nation"),this._getLoreItem("loreSociety","society"),this._getLoreItem("loreStratum","stratum"),this._getLoreItem("lorePosition","position"),this._getProfession(),this._getPaternProfession(),this._checkLoreCohesion(),this._custoLore(),this._backLore.weaponLevels=t.configWeaponsLevels()}_getLoreItem(t,s){let e=this._actor.items.find(s=>s.type===t);e&&(this._backLore[s]={...this._backLore[s],noItem:!1,item:e,label:e.name})}_getProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&!t.system.patern);t&&(this._backLore.profession={...this._backLore.profession,noItem:!1,item:t,label:t.name,initial:t.system.initial})}_getPaternProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.patern);t&&(this._backLore.paternProfession={...this._backLore.paternProfession,noItem:!1,item:t,label:t.name})}_checkLoreCohesion(){this._backLore.kingdom.noItem&&(this._backLore.nation=this._clearLore("noNation")),this._backLore.nation.noItem&&(this._backLore.society=this._clearLore("noSociety"),this._backLore.stratum=this._clearLore("noStratum")),this._backLore.stratum.noItem&&(this._backLore.position=this._clearLore("noPosition"))}_custoLore(){this._backLore.custo.frameH=this._getImageByHeritage("frameH"),this._backLore.custo.frameV=this._getImageByHeritage("frameV"),this._backLore.custo.frameQ=this._getImageByHeritage("frameQ"),this._backLore.custo.paper=this._getImageByHeritage("paper")}_getImageByHeritage(t){return this._backLore.profession.item?.system.custo[t]&&""!==this._backLore.profession.item?.system.custo[t]?this._backLore.profession.item?.system.custo[t]:this._backLore.position.item?.system.custo[t]&&""!==this._backLore.position.item?.system.custo[t]?this._backLore.position.item?.system.custo[t]:this._backLore.stratum.item?.system.custo[t]&&""!==this._backLore.stratum.item?.system.custo[t]?this._backLore.stratum.item?.system.custo[t]:this._backLore.nation.item?.system.custo[t]&&""!==this._backLore.nation.item?.system.custo[t]?this._backLore.nation.item?.system.custo[t]:this._backLore.kingdom.item?.system.custo[t]&&""!==this._backLore.kingdom.item?.system.custo[t]?this._backLore.kingdom.item?.system.custo[t]:this._backLore.society.item?.system.custo[t]&&""!==this._backLore.society.item?.system.custo[t]?this._backLore.society.item?.system.custo[t]:this._backLore.custo[t]}_clearLore(t){return{label:game.i18n.localize("common."+t),noItem:!0,item:null}}_initTraits(){this._traits=[];let t=this._getItemsByType("trait");0!==(t=t.filter(t=>!t.system.extend.sequel)).length&&(this._sortByName(t),t.sort((t,s)=>t.system.extend.pride?-1:t.system.extend.pride||s.system.extend.shame?0:1),t.map(t=>{this._traits.push({name:t.name,id:t.system.control.key,type:t.system.extend.pride?"pride":t.system.extend.shame?"shame":"",typeTxt:t.system.extend.pride?game.i18n.localize("common.pride"):t.system.extend.shame?game.i18n.localize("common.shame"):"",color:t.system.extend.pride?"#20417f2e":t.system.extend.shame?"#53090926":"transparent",item:t}),t.system.extend.pride&&(this._traitsStats.pride+=t.system.extend.points),t.system.extend.shame&&(this._traitsStats.shame+=t.system.extend.points)}))}_initSequels(){this._sequels=[];let t=this._getItemsByType("trait");0!==(t=t.filter(t=>t.system.extend.sequel)).length&&(this._sortByName(t),this._sequels=t)}_initSkills(){this._skills=[];let t=this._getItemsByType("skill");if(0===t.length)return;let s=t.filter(t=>""===t.system.extend.parent);this._sortByName(s),s.sort((t,s)=>t.system.extend.combat&&!s.system.extend.combat?1:!t.system.extend.combat&&s.system.extend.combat?-1:0);let i=0,o=0;s.map(s=>{let e=t.filter(t=>t.system.extend.parent===s.system.control.key);s.system.extend.group=e.length>0,s.system.extend.specialty=!1,s.system.extend.group?(o++,s.system.extend.groupIndex=o,this._skills.push(s),this._sortByName(e),e.map(t=>{t.system.extend.group=!1,t.system.extend.sortName=s.name+"_"+t.name,t.system.extend.groupIndex=o,this._skills.push(t)})):(s.system.extend.sortName=s.name,s.system.extend.groupIndex=0,this._skills.push(s)),i++}),this._systemData.control.skills.sortByValue&&this._skills.sort((t,s)=>Number(this._systemData.skills[t.system.control.key].value)<Number(this._systemData.skills[s.system.control.key].value)?1:Number(this._systemData.skills[t.system.control.key].value)>Number(this._systemData.skills[s.system.control.key].value)?-1:0),this._systemData.control.skills.onlyFavorites&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].favorite)),this._systemData.control.skills.onlyLearned&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].checked)),this._systemData.control.skills.onlyByProfession&&(this._skills=this._skills.filter(t=>this._systemData.skills[t.system.control.key].primary||this._systemData.skills[t.system.control.key].secondary||this._systemData.skills[t.system.control.key].patern)),this._systemData.control.skills.search&&""!==this._systemData.control.skills.search&&(this._skills=this._skills.filter(t=>t.name.toLowerCase().includes(this._systemData.control.skills.search.toLowerCase()))),$("body").width();let a=Math.ceil(this._skills.length/2);i=0,this._backProfession.initialExperience=0,this._backProfession.paternExperience=0,this._skills.map(t=>{let s=t.system.control.key;if(!s)return;t.system.extend.column=Math.trunc(i/a)+1,void 0===this._systemData.skills[s]&&(this._systemData.skills[s]={key:s,value:0,modBase:"+0",mod:"+0",mult:"1",checked:!1,favorite:!1,primary:!1,secondary:!1,patern:!1});let o=this._systemData.skills[s];if(!o)return;if(o.initial=e.getChar(this._systemData,t.system.extend.characteristic),o.value=Number(o.value),o.value<o.initial&&(o.value=o.initial),o.modBase=e.checkMod(o.modBase),o.mod=e.checkMod(o.mod),o.mult=e.checkMult(o.mult),o.order=i,o.group=t.system.extend.group,o.groupIndex=t.system.extend.groupIndex,o.column=t.system.extend.column,o.primary){let r=3*e.getChar(this._systemData,t.system.extend.characteristic);o.value<r&&(o.value=r),o.initial=r}o.initial=o.initial?o.initial:0;let n=o.primary?1:o.secondary?1:o.patern?1:2;o.patern?this._backProfession.paternExperience+=(o.value-o.initial)*n:this._backProfession.initialExperience+=(o.value-o.initial)*n,o.valueTotal=e.calcValueTotal(o),i++})}_initSelectedSkill(){let t=this._systemData.control.skills.lastSkill,s=this._skills.find(s=>s._id===t);this._selectedSkill={...this._selectedSkill,key:t,item:s,id:s?.id,empty:!s}}async _syncLore(){this._context.backLore=this._backLore}async _syncTraits(){this._context.backTraits=this._traits,this._context.backTraitsStats=this._traitsStats,this._context.backSequels=this._sequels}async _syncSkills(){this._context.backSkills=this._skills,this._context.selectedSkill=this._selectedSkill}async _syncActorTab(){this._context.backActor=this._actorTab}_compareSyncSkill(t,s){return Number(t.system.value)===Number(s.value)&&e.checkMod(t.system.modBase)===e.checkMod(s.modBase)&&e.checkMod(t.system.mod)===e.checkMod(s.mod)&&e.checkMult(t.system.mult)===e.checkMult(s.mult)&&t.system.checked===s.checked}async _syncCombat(){this._context.backCombat=this._backCombat}_initProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.initial);t?.system.initial&&this._dialogProfession();let s=this._actor.items.find(t=>"loreProfession"===t.type&&!t.system.patern);s&&(this._backProfession.profession=s,s.system.minChars.map(t=>{this._systemData.characteristics[t.key]&&(this._systemData.characteristics[t.key].min=Number(t.value),this._systemData.characteristics[t.key].value=this._systemData.characteristics[t.key].value<this._systemData.characteristics[t.key].min?this._systemData.characteristics[t.key].min:this._systemData.characteristics[t.key].value)}),this._systemData.lockFemale=!1,s&&s.system.extend.female&&(this._systemData.attributes.female=!0,this._systemData.lockFemale=!0),s&&s.system.extend.male&&(this._systemData.attributes.female=!1,this._systemData.lockFemale=!0))}_dialogProfession(){let t=this._actor.items.find(t=>"loreProfession"===t.type&&t.system.initial);if(!t)return;let s=[],e=[],i=[],o=[],a=this._actor.items.filter(t=>"skill"===t.type);t.system.primarySkills.map(t=>{t.group=""===t.group?0:t.group,s.findIndex(s=>s===t.group)>=0||s.push(t.group)}),t.system.secondarySkills.map(t=>{t.group=""===t.group?0:t.group,i.findIndex(s=>s===t.group)>=0||i.push(t.group)}),[s,i].map((s,i)=>{let r=0===i?e:o,n=0===i?t.system.primarySkills:t.system.secondarySkills;s.map(t=>{n.filter(s=>s.group===t).map(s=>{let e=a.find(t=>t.system.control.key===s.key);e?r.push({group:t,auto:0===t,key:s.key,error:!1,skill:e}):r.push({group:t,auto:0===t,key:s.key,error:!0,skill:{id:"error",img:"/systems/aquelarre/assets/icons/cancel.svg",name:"(ERROR: "+s.key+") "+game.i18n.localize("common.noSkill")}})})})});let r=`<formHeader>${game.i18n.localize("common.configProfession")}: ${t.name}</formHeader>`,n="";n+='<div class="_rows"><div class="_column">',n+=`<formTitle>${game.i18n.localize("common.primarySkills")}</formTitle>`,s.map(t=>{n+='<formItems data-singular="true">',e.filter(s=>s.group===t).map((s,e)=>{n+=`<formItem data-group="${t}"
                                      data-id="${s.skill.id}"
                                      data-key="${s.key}"
                                      data-primary="true"
                                      data-choice="${s.auto?"true":"false"}">

                                <img for="skillPrimary_${t}_${s.skill.id}"
                                     class="_itemIcon" src="${s.skill.img}" />
                                <input type="checkbox"
                                    id="skillPrimary_${t}_${s.skill.id}"
                                    name="skillPrimary_${t}_${s.skill.id}"
                                    data-key="${s.key}"
                                    data-actorid="${this._actor.id}"
                                    data-tokenid="${this._actor.token?.id}"
                                    data-group="${t}"
                                    data-primary="true"
                                    data-secondary="false"
                                    ${0===t||0===e?" checked":""}
                                    ${0===t?" disabled":""}                                    
                                    data-skillid="${s.skill.id}"/> 

                                <label for="skillPrimary_${t}_${s.skill.id}">${s.skill.name}</label>
                            </formItem>`}),n+="</formItems>"}),n+="</div>",n+='<div class="_column">',n+=`<formTitle>${game.i18n.localize("common.secondarySkills")}</formTitle>`,i.map(t=>{n+='<formItems data-singular="true">',o.filter(s=>s.group===t).map((s,e)=>{n+=`<formItem data-group="${t}"
                                      data-id="${s.skill.id}"
                                      data-key="${s.key}"
                                      data-primary="true"
                                      data-choice="${s.auto?"true":"false"}">

                                <img for="skillSecondary_${t}_${s.skill.id}"
                                     class="_itemIcon" src="${s.skill.img}" />
                                <input type="checkbox"                                    
                                    id="skillSecondary_${t}_${s.skill.id}"
                                    name="skillSecondary_${t}_${s.skill.id}"
                                    data-key="${s.key}"
                                    data-actorid="${this._actor.id}"
                                    data-tokenid="${this._actor.token?.id}"
                                    data-group="${t}"
                                    data-primary="false"
                                    data-secondary="true"
                                    ${0===t||0===e?" checked":""}
                                    ${0===t?" disabled":""}
                                    data-skillid="${s.skill.id}"/> 

                                <label for="skillSecondary_${t}_${s.skill.id}">${s.skill.name}</label>
                            </formItem>`}),n+="</formItems>"}),n+="</div></div>";let l=new Dialog({title:game.i18n.localize("common.configProfession"),content:"<formDialog>"+r+n+"</formDialog>",buttons:{accept:{label:game.i18n.localize("common.accept"),callback:async(s,e)=>{let i=[];$(s).find("._rows").find("input:checked").each(function(t,s){i.push({actorId:$(s).data("actorid"),tokenId:"undefined"!==$(s).data("tokenid")?$(s).data("tokenid"):void 0,primary:$(s).data("primary"),secondary:$(s).data("secondary"),group:$(s).data("group"),key:$(s).data("key")})}),backSheet._setUpProfession(this._actor,t,i)}}}});l.options.classes=["dialog","_formDialog","_professionDialog"],l.render(!0,{top:"5%"})}static async _setUpProfession(t,s,e){let i=s.system.config,o={};e.map(t=>{i.skills[t.key]={primary:t.primary,secondary:t.secondary};let e="system.skills."+t.key;s.system.patern?o[e+".patern"]=!0:(o[e+".primary"]=t.primary,o[e+".secondary"]=t.secondary)}),await s.update({"system.initial":!1,"system.config":i}),await t.update(o)}async _syncProfession(){this._context.backProfession=this._backProfession}_initArmor(){this._backArmor.actorType=this._context.data.type,this._backArmor.locations=t.configLocations(!1,this._backArmor.actorType),this._backArmor.items=this._actor.items.filter(t=>"armor"===t.type),this._backArmor.items.sort(e.byName),this._backArmor.noItems=0===this._backArmor.items.length,this._backArmor.locations.map(t=>{t.armor=this._backArmor.items.find(s=>s.system.location[t.key].checked&&s.system.control.inUse),t.armored=!!t.armor,t.armorStatus={value:0,color:"#00000000"},t.armor&&(t.armorStatus.value=Math.round(t.armor.system.endurance/t.armor.system.endInitial*100),t.armorStatus.color=t.armorStatus.value<10?"#f30b0bcc":t.armorStatus.value<25?"#f9684fcc":t.armorStatus.value<50?"#f9c64fcc":t.armorStatus.value<75?"#e5f94fc7":"#4ff94fc7")}),this._backArmor.imgBackground=this._context.systemData.attributes.female?"vitrWoman.png":"vitrMan.png"}async _syncArmor(){this._context.backArmor=this._backArmor}async _initEquipment(){this._items=this._actor.items.filter(t=>"item"===t.type),this._items.sort(e.byName),this._initMoney(),this._initCashProfession(),this._initEquipmentBooks(),this._initHoldings(),this._initWeapons(),this._initItemDetail(),this._backEquipment.items=this._items.filter(t=>!t.system.extend.holding),this._backEquipment.noItems=0===this._backEquipment.items.length}_initMoney(){this._systemData.money.cash=e._number(this._systemData.money.cash),this._systemData.money.total=e._number(this._systemData.money.total)}_initCashProfession(){this._backProfession.text=this._backProfession.profession?this._backProfession.profession.name:game.i18n.localize("common.noProfession"),this._backProfession.hasProfession=!!this._backProfession.profession;try{this._backProfession.income.isFormula=isNaN(Number(this._backProfession.profession.system.income.expression));let t=this._backProfession.profession.system.income.expression.replaceAll("skill","#skill").replaceAll("char","#char");this._backProfession.income.value=e.evalExpression(t,!1,this._actor),this._backProfession.income.text=e.evalExpression(t,!0,this._actor),this._backProfession.income.payed=this._systemData.money.payed}catch(s){}}_initEquipmentBooks(){this._backBooks.items=this._actor.items.filter(t=>"book"===t.type),this._backBooks.noItems=0===this._backBooks.items.length,this._backBooks.items.sort(e.byName)}async _initHoldings(){let s=await t.getGoodsFromCompendium();this._items.filter(t=>t.system.extend.holding).map(t=>{this._backHoldings.holdings.push({item:t,min:e._number(t.system.holding.laborers.min),max:e._number(t.system.holding.laborers.total),prod:e._number(t.system.holding.laborers.total)>0,labo:e._number(this._systemData.economy.holdings[t.id]?.laborers),eff:0,eff0:0,text:"",showText:!1,showLocation:""!==t.system.holding.location,income:t.system.holding.income,showIncome:""!==t.system.holding.income&&"0"!==t.system.holding.income,cost:t.system.holding.cost,showCost:""!==t.system.holding.cost&&"0"!==t.system.holding.cost,good:s?s.find(s=>s.id===t.system.holding.goods):null,goodIncome:t.system.holding.goodIncome,showGood:""!==t.system.holding.goodIncome,payedIncome:!!this._systemData.economy.holdings[t.id]?.payedIncome,payedCost:!!this._systemData.economy.holdings[t.id]?.payedCost,payedGood:!!this._systemData.economy.holdings[t.id]?.payedGood})});let i=0;this._backHoldings.holdings.map(t=>{t.good||(t.showGood=!1),t.prod&&(i+=t.labo)>this._systemData.economy.laborers&&(i-=t.labo,t.labo=this._systemData.economy.laborers-i,t.labo=t.labo<0?0:t.labo,i+=t.labo,t.text=game.i18n.localize("info.noWorkers"),t.showText=!0)}),this._backHoldings.holdings.map(t=>{t.prod&&(t.eff=t.max>0?Math.round(t.labo/t.max*100):0,t.eff0=t.eff/100)}),this._backHoldings.noItems=0===this._backHoldings.holdings.length,this._backHoldings.maxLaborers=20}_initWeapons(){this._backWeapons.items=this._actor.items.filter(t=>"weapon"===t.type),this._backWeapons.noItems=0===this._backWeapons.items.length,this._backWeapons.items.sort(e.byName)}_initItemDetail(){this._systemData.control.selection.item&&""!==this._systemData.control.selection.item&&(this._itemDetail.item=this._actor.items.find(t=>t.id===this._systemData.control.selection.item)),this._itemDetail.item&&(this._itemDetail.show=!0)}async _syncEquipment(){this._context.backEquipment=this._backEquipment,this._context.backBooks=this._backBooks,this._context.backHoldings=this._backHoldings,this._context.backWeapons=this._backWeapons,this._context.itemDetail=this._itemDetail}_getModes(){this._modes=s.getModes(this._actor)}_initModes(){this._systemData.modes&&0!==this._systemData.modes.length&&this._systemData.modes.map(t=>{let s=this._configModes.find(s=>s.key===t);s&&(this._backModes[t]={...s,img:e.assetsPath()+"/modes/"+s.img,label:s.name})})}async _syncModes(){this._context.backModes=this._backModes}async _checkHealth(){for(var t in this._systemData.modes=this._systemData.modes.filter(t=>"s0"!==t&&"s1"!==t&&"s2"!==t&&"s3"!==t&&"s4"!==t),this._systemData.lifeStatus){if(this._systemData.lifeStatus[t].acquired)!this._configModes.find(s=>s.key===t)||this._systemData.modes.find(s=>s===t)||this._systemData.modes.push(t)}}_getItemsByType(t){let s=this._actor.items.filter(s=>s.type===t);return s.sort(e.byName),s}_sortByName(t){t.sort(e.byName)}}