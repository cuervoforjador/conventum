import{helperUtils}from"./helperUtils.js";import{oRoll}from"../objects/oRoll.js";import{helperBackend}from"./helperBackend.js";import{helperCombat}from"./helperCombat.js";import{helperSocket}from"./helperSocket.js";import{helperMessages}from"./helperMessages.js";export class helperSheets{static checkData(e){let t=e.systemData,o=t.characteristics,s=t.secondaries,a=t.attributes;for(var l in t.control.rules=helperUtils.getRules(),"vyc"===helperUtils.getRules()||"aq4"===helperUtils.getRules()?delete o.asp:delete o.tem,o){let i=o[l];i.min=Number(game.template.Actor.templates.base.characteristics[l].min),i.max=Number(i.max),i.value=Number(i.value),i.value<i.min&&(i.value=i.min),i.value>i.max&&(i.value=i.max),i.value=i.value<0?0:i.value,i.mod=helperUtils.checkMod(i.mod)}for(var l in s.rr.max=s.rr.value>100?s.rr.value:100,s.irr.max=s.rr.value>100?s.irr.value:100,s.luck.max=helperUtils.getChar(t,"com")+helperUtils.getChar(t,"per")+helperUtils.getChar(t,"cul"),s.faith.max=Math.ceil(helperUtils.getChar(t,"rr")/5),s.conc.max=Math.ceil(helperUtils.getChar(t,"irr")/5),s.exper.max=s.exper.max<0?0:s.exper.max,s.exper.value=s.exper.value<0?0:s.exper.value,s.exper.value=s.exper.value>s.exper.max?s.exper.max:s.exper.value,s.hits.max=helperUtils.getChar(t,"end"),s.hits.min=-1*s.hits.max,s.hits.serious=Math.ceil(helperUtils.getChar(t,"end")/2),s){let r=s[l];r.value<r.min&&(r.value=r.min),r.value>r.max&&(r.value=r.max),r.mod=helperUtils.checkMod(r.mod)}for(var l in t.lifeStatus)t.lifeStatus[l].acquired=!1,t.lifeStatus[l].max=s.hits.max*t.lifeStatus[l].coef;for(var n=10;n>=0;n--){let m=t.lifeStatus["s"+n];if(m&&s.hits.value<=m.max){m.acquired=!0;break}}a.damage.value=this.getDamageBon(t),a.damage.mod=helperUtils.checkMod(a.damage.mod),a.damage.mult=helperUtils.checkMult(a.damage.mult),a.app.value<a.app.min&&(a.app.value=a.app.min),a.app.value>a.app.max&&(a.app.value=a.app.max),a.app.level=helperUtils.checkMod(a.app.value),a.app.mod=helperUtils.checkMod(a.app.mod)}static async resetAttributes(e){await e.update({"system.secondaries.faith.value":e.system.secondaries.faith.max,"system.secondaries.luck.value":e.system.secondaries.luck.max,"system.secondaries.conc.value":e.system.secondaries.conc.max})}static getDamageBon(e,t=!1,o=0){if(t=!!t&&t,!e)return;let s="-1D6",a=helperUtils.getChar(e,"str")+o;a>=0&&(s="-1D6"),a>=5&&(s="-1D4"),a>=10&&(s=""),a>=15&&(s="+1D4"),a>=20&&(s="+1D6"),a>=25&&(s="+2D6"),a>=30&&(s="+3D6"),a>=35&&(s="+4D6"),a>=40&&(s="+5D6"),a>=45&&(s="+"+(Math.ceil((a+1)/5)-4).toString()+"D6");let l=Object.keys(e.lifeStatus).map(t=>e.lifeStatus[t]).find(e=>e.acquired);return l&&1!==l.coef&&""!==s&&!t?l.coef>0?s[0]+"("+s.substring(1)+"*"+l.coef+")":"+0":s}static onCloseSheetContent(e){this.activateTab("main");let t=$(e.currentTarget).parents(".window-app").find("._blackView");t&&t.remove();let o=$(e.currentTarget).parents(".window-app").find("._bookFrame");o&&o.remove();let s=$(e.currentTarget).parents(".window-app").find("form");s.children().each(function(e,t){$(t).is("section")||$(t).show()}),s.parents(".sheet.actor").find("header.window-header").show()}static async onShortSheetContent(e){await this.actor.update({"system.control.view.short":!this.actor.system.control.view.short})}static postRender(e){let t=e.sheet;if(!t)return;let o=e.sheet.form;if(!o)return;let s=$(o).parents(".window-app"),a=this._getNSize(t);t.position.width=a,t.position.height=a+30,s.find("._actorName ._name")[0].style.setProperty("--propCharLabel",a*(8/(e.name.length<10?10:e.name.length))/850),s.find("._characteristics ._characteristic").each((function(e,t){t.style.setProperty("--propCharLabel",a/850)}).bind(this)),s.find("._actorMenu ._actorMenuButton ._textButton").each((function(e,t){t.style.setProperty("--propCharLabel",a/850)}).bind(this)),s.hasClass("minimized")||(s.find("h4.window-title").html(`<a class="document-id-link" 
                aria-label="${game.i18n.localize("ui.copyUUID")}" 
                data-tooltip="SHEETS.CopyUuid" 
                data-tooltip-direction="UP">
                    <div class="_name">${e.name}</div>
                    <i class="fa-solid fa-passport"></i>
            </a>`),s.find("header .header-button").each((function(e,t){$(t).html($(t).html().split("</i>")[0]+"</i>")}).bind(this))),this._arcHitPoints(s,e),this._barStats(t),this._progressBar(t),this._focusMe(t),this._sheetContent(t,e),this._sheetSkills(t,e),this._sheetCombat(t,e),this._sheetCommon(t,e)}static _getNSize(e){return e.position.width>e.position.height-30?e.position.height-30:e.position.width}static _arcHitPoints(e,t){let o=this._getNSize(t.sheet),s=Math.ceil(90-t.system.secondaries.hits.value/t.system.secondaries.hits.max*90),a=s.toString()+"deg",l=s.toString()+"deg";s<=20&&(l="20deg"),s>=160&&(l="160deg"),e.find("._arcHitPointsHigh")[0].style.setProperty("--arcFrom",a),t.system.secondaries.hits.value<=0?(e.find("._arcHitPointsLow")[0].style.setProperty("--arcFrom",a),e.find("._hitPointsValue").addClass("_minusHitPoints")):(e.find("._arcHitPointsLow")[0].style.setProperty("--arcFrom","90deg"),e.find("._hitPointsValue").removeClass("_minusHitPoints")),e.find("._hitPointsValue")[0].style.setProperty("--arcFrom",l),e.find("._hitPointsValue")[0].style.setProperty("--propCharLabel",o/850),e.find("._hitPointsMax")[0].style.setProperty("--arcFrom",l),e.find("._hitPointsMax")[0].style.setProperty("--propCharLabel",o/850),e.find("._lifeStatus")[0].style.setProperty("--arcFrom",l),e.find("._lifeStatus")[0].style.setProperty("--propCharLabel",o/850)}static _barStats(e){$(e.form).find("statBar").each((function(e,t){let o=Number($(t).data("value"));(!o||isNaN(o))&&(o=0);let s="#4d0909bd";(o=o<=0?0:o>100?100:o)>25&&(s="#a17515d4"),o>50&&(s="#566919d4"),o>75&&(s="#13552cd4"),$(t).parent().prepend("<statBarBack></statBarBack>"),$(t)[0].style.setProperty("--statValue",o.toString()+"%"),$(t)[0].style.setProperty("--statColor",s)}).bind(this))}static _progressBar(e){$(e.form).find("progressBar").each((function(e,t){let o=Number($(t).data("value")),s=Number($(t).data("max"));if(!s||isNaN(s)||0===s)return;let a=Math.round(o/s*100),l=$(t).parent();l.prepend(`<div class="_pBBack" style="background: ${$(t).data("backgroundcolor")}"></div>`),$(t).append(`<div class="_pBar" style="width: ${a}%;
                                                   background: ${$(t).data("forecolor")}">
                            <div class="_gloss"></div>
                         </div>`),l.append(`<div class="_pB">
                                <div class="_pBBackMiddle"></div>
                                <div class="_pBBackInit"></div>
                                <div class="_pBBackEnd"></div>
                          </div>`)}).bind(this)),$(e.form).find("progressHBar").each(function(e,t){let o=Number($(t).data("value")),s=Number($(t).data("max")),a=Number($(t).data("min"));if(!s||isNaN(s)||0===s||!a||isNaN(a)||0===a)return;let l,i=Math.round((o>0?o:0)/s*100),r=Math.round((o<0?o-a:-a)/a*100),n=$(t).parent();n.prepend(`<div class="_pHBBack" style="background: ${$(t).data("backgroundcolor")}">
                           </div>`),$(t).append(`<div class="_pHBar1" style="height: calc(${i}% *0.5);
                                                    top: calc(50% - ${i}% *0.5);
                                                    background: ${$(t).data("forecolor1")}">
                            <div class="_gloss"></div>
                         </div>
                         <div class="_pHBar2" style="height: calc(-1 * ${r}% *0.5);
                                                    top: calc(100% + ${r}% *0.5);
                                                    background: ${$(t).data("forecolor2")}">
                            <div class="_gloss"></div>
                         </div>`),n.append(`<div class="_pHB">
                                <div class="_pHBBackMiddle"></div>
                                <div class="_pHBBackInit"></div>
                                <div class="_pHBBackEnd"></div>
                          </div>`);for(var e=1;e<=10;e++){if(void 0===$(t).data("point"+e))continue;let m=Number($(t).data("point"+e)),d=m>0?Math.round(50-m/s*50):0===m?50:m<0?Math.round(150-m/a*50):0;d>=98&&(d=98),n.append(`<div class="_pbMark" style="top: ${d}%">
                              </div>
                              <div class="_pbLabelMark" style="top: ${d}%">
                                ${$(t).data("label"+e)}
                              </div>`)}})}static _focusMe(e){$("body").find(".window-app.sheet.actor").each(function(t,o){e.id!==o.id?($(o).addClass("_back"),$(o).removeClass("_front")):($(o).addClass("_front"),$(o).removeClass("_back"))})}static _sheetContent(e,t){let o=$(e.form).parents(".window-app"),s=$("#sidebar").width();window.innerWidth;let a=$(e.form).find("section.tabs_ActorContent sheetcontent.tab.active");if(!e.options.left&&!e.options.top&&0===o.position().left&&0===o.position().top&&!a.hasClass("_empty")&&"main"!==e._tabs.find(e=>".tabs_ActorMenu"===e._navSelector).active){e.activateTab("main"),e.close();return}if(a.hasClass("_empty"))return;let l=e.actor.system.control.view.short,i=l?(window.innerWidth-s).toString()+"px":window.innerWidth.toString()+"px",r=l?Number(i.replace("px",""))/1.8285:window.innerHeight;a.css({left:-o.position().left.toString()+"px",top:(-o.position().top-1).toString()+"px",width:i,height:r.toString()+"px"}),a.find("._closeSheetButton"),a[0].style.setProperty("--vSize",a.height().toString()+"px"),a[0].style.setProperty("--viewHeight",window.innerHeight.toString()+"px"),a[0].style.setProperty("--hSize",a.width().toString()+"px"),a[0].style.setProperty("--smallRatio",a.width()*.035.toString()+"px"),a[0].style.setProperty("--hexIncr","9%"),a[0].style.setProperty("--vFont",.019*a.width()+"px"),l?a.parents(".window-app.sheet.actor").addClass("_short"):a.parents(".window-app.sheet.actor").removeClass("_short"),l&&0===a.parents(".tabs_ActorContent").find("._blackView").length&&(a.parents(".tabs_ActorContent").prepend(`<div class="_bookFrame" style="height: calc(${a.height().toString()}px + 10px);
                                                                  width: calc(${a.width().toString()}px + 10px);
                                                                   left: calc(${a.css("left")});
                                                                    top: calc(${a.css("top")} + (${window.innerHeight-a.height()}px * 0.5));"></div>`),a.parents(".tabs_ActorContent").prepend(`<div class="_blackView" style="height: ${window.innerHeight}px;
                                                                 width: ${a.width()}px;"></div>`)),a.parents("form._short").length>0&&(a.parents("form._short").children().each(function(e,t){$(t).is("section")||$(t).hide()}),a.parents(".sheet.actor").find("header.window-header").hide()),this._actorTab(e,t)}static _actorTab(e,t){let o=$(e.form).find("section.tabs_ActorContent sheetcontent.tab.active")?.data("tab");if(!o||"actor"!==o)return}static _sheetSkills(e,t){$(e.form).parents(".window-app");let o=$(e.form).find("._blockSkills"),s=$(e.form).find("._blockSkillText");if(0!==o.length)o[0].style.setProperty("--ratio",($("body").height()/650).toFixed(2)),s[0].style.setProperty("--ratio",($("body").height()/650).toFixed(2)),$("body").width(),this.showSkillInfo(e,t,t.system.control.skills.lastSkill,!0)}static showSkillInfo(e,t,o,s){s=!!s&&s;let a=$(e.form).find("._blockSkillText"),l=$(e.form).find("._blockSkills"),i=t.items.get(o);if(!i){a.find("._title").hide(),a.find("._actions").hide(),a.find("._characterist").hide(),a.find("._text").hide();return}let r=t.system.skills[i.system.control.key];if(!r)return;let n=l.find('._skill[data-id="'+o+'"] ._stats'),m=a.find("._stats");if(m?.data("id")===o&&!s)return;if(m.length>0){let d=$(e.form).find('._blockSkills ._skill[data-id="'+m.data("id")+'"]');m.appendTo(d)}n.prependTo(a),n.first().insertAfter(a.find("._title"));let c="";c+=`<span class="_contextButton"
                         data-action="selectSkill"
                         data-contextActor="${t?.id}"
                         data-contextToken="${t.token?.id}"
                         data-contextId="${i?.id}">${i?.name}</span>`,a.find("._title").html(c);let p=helperUtils.getChar(t.system,i.system.extend.characteristic);a.find("._characterist span._char").text(game.i18n.localize("characteristics."+i.system.extend.characteristic)+" ("+p+")"),a.find("._text").html(i.system.description);let f=$(e.form).find("control._skills");f.find('input[name="system.control.skills.lastSkill"]').val(o)}static hideSkillInfo(e,t){let o=$(e.form).find("._blockSkillText ._title"),s=$(e.form).find("._blockSkillText ._text"),a=$(e.form).find("._blockSkillText ._image");o.text(""),a.attr("src",t.img),s.html("")}static spell_prop(e){if(!e)return;let t=CONFIG.ExtendConfig.magic.spellsVIS["vis"+e.level];return t?t["s"+e.type.system]:""}static async addingBook(e){let t=e.parent;for(var o of e.system.spells){let s=await game.packs.get(o.pack).getDocument(o.id);if(s){s.system.study.fromBook=!0,s.system.study.book=e.id;await (await Item.create(s,{parent:t})).update({"system.study.fromBook":!0,"system.study.book":e.id})}}}static getModes(e){let t=[];if(!e)return t;for(var o in CONFIG.ExtendConfig.modes){let s=CONFIG.ExtendConfig.modes[o];s.key=o,s.name=game.i18n.localize(s.label),s.img0=helperUtils.assetsPath()+"/modes/"+s.img,s.visible=s.removable,s.inUse=!!e.system.modes.find(e=>e===o),t.push(s)}return t}static async deleteMode(e,t){await e.update({"system.modes":e.system.modes.filter(e=>e!==t)})}static addMode(e){this.dialogCreateCombat(e)}static findModesBy(e,t){let o=[];return e&&e.system.modes.map(e=>{""!==CONFIG.ExtendConfig.modes[e][t]&&o.push(CONFIG.ExtendConfig.modes[e])}),o}static dialogCreateCombat(e){let t=this.getModes(e).filter(e=>e.removable),o=`<formHeader>${game.i18n.localize("common.modes")}</formHeader>`,s='<formItems data-singular="false">';t.map(e=>{s+=`<formItem data-folder=''>
                            <img for="item_${e.key}"
                                 class="_portrait" src="${e.img0}" />
                            <input type="checkbox"
                                   id="item_${e.key}"
                                   name="item_${e.key}"
                                   itemid="${e.key}" />                                
                            <label for="item_${e.key}">${e.name}</label>
                        </formItem>`}),s+="</formItems>";let a={select:{label:game.i18n.localize("common.select"),async callback(e,t){let o=[];if($(e).find("formItems").find("input:checked").each(function(e,t){o.push({itemId:$(t).attr("itemid")})}),0!==o.length&&!l.actor.system.modes.find(e=>e===o[0].itemId)){let s=l.actor.system.modes;s.push(o[0].itemId),l.actor.update({"system.modes":s})}}}},l=new Dialog({title:game.i18n.localize("common.selectMode"),content:"<formDialog>"+o+s+"</formDialog>",buttons:a});l.actor=e,l.options.classes=["dialog","_formDialog","_formModes"],l.render(!0)}static _sheetCombat(e,t){let o=$(e.form).find('sheetcontent[data-tab="combat"]'),s=o.find("._menuFrame");o[0].style.setProperty("--ratio",(.17*$("body").width()).toFixed(2).toString()+"px"),o[0].style.setProperty("--ratioMargin",(.015*$("body").height()).toFixed(2).toString()+"px"),s[0].style.setProperty("--numOptions",s.find("._menuOption").length),s[0].style.setProperty("--heightOptions",(.1*$("body").height()).toFixed(2).toString()+"px"),s[0].style.setProperty("--ratioFont",($("body").width()/70).toFixed(1).toString()+"pt"),o[0].style.setProperty("--numFluxSteps",o.find("._fluxWrap").find("._step").length)}static dialogShowModifiers(e,t=!1){if(!game.combat)return;let o=game.combat.combatants.get(e.combatantid);if(!o)return;let s=o.actor.items.get(e.actionid);if(!s&&!t)return;let a=game.items.find(e=>"encounter"===e.type&&e.system.combat===game.combat.id);if(!a)return;let l=a.system.steps.find(t=>t.id===e.stepid);if(!l)return;let i=`<formHeader>${game.i18n.localize("common.rollMods")}</formHeader>`,r="",n="";["modattackcritical","modattackpenal"].map(t=>{e[t]&&0!==Number(e[t])&&(n+=`<formItem>  
                            <row><label>${game.i18n.localize("common."+t)}: 
                                        ${e[t]}%</label></row>
                           </formItem>`)});let m=e.modcombat.split(",");if(m.length>0&&m.map(e=>{l.mod.mods.find(t=>t===e)||l.mod.mods.push(e)}),t)r=`<formItems>
                            <formItem>
                                <row><label>${game.i18n.localize("common.applyDamageMod")}:
                                            ${"true"===e.basemodapply?game.i18n.localize("common.yes"):game.i18n.localize("common.no")}
                                </label></row>
                            </formItem>
                            ${"true"===e.basemodapply?"<formItem><row><label>"+game.i18n.localize("common.damageMod")+": "+e.basemod+"</label></row></formItem>":""}
                            <formItem>
                                <row><label>${game.i18n.localize("common.applyActionMod")}:
                                            ${"true"===e.modactionapply?game.i18n.localize("common.yes"):game.i18n.localize("common.no")}
                                </label></row>
                            </formItem>
                            ${"true"===e.modactionapply?"<formItem><row><label>"+game.i18n.localize("common.actionMod")+": "+e.modaction+"</label></row></formItem><formItem><row><label>"+game.i18n.localize("common.actionMult")+": "+e.multaction+"</label></row></formItem>":""}                            
                        </formItems>`;else{let d="";l.mod.mods.map(e=>{let t=CONFIG.ExtendConfig.combatMods.find(t=>t.index===e);if(t)d+=`<formItem> 
                                <row><label>${game.i18n.localize(t.label)}: 
                                            ${s.system.type.attack?t.attack:s.system.type.defense?t.defense:""}%</label></row>
                        </formItem>`}),r=`<formItems>
                            <formItem>
                                <row><label>${game.i18n.localize("common.modRollInitiative")}: 
                                            ${e.modinitiative}%</label></row>
                            </formItem>
                            <formItem>
                                <row><label>${game.i18n.localize("common.modRollWeapon")}: 
                                            ${e.modweapon}%</label></row>
                            </formItem>
                            <formItem>                                            
                                <row><label>${game.i18n.localize("common.modRollArmor")}: 
                                            ${e.modarmor}%</label></row>
                            </formItem>
                            ${n}
                            ${d}
                            
                        </formItems>`}let c=new Dialog({title:game.i18n.localize("common.selectCombatant"),content:"<formDialog>"+i+r+"</formDialog>",buttons:{}});c.options.classes=["dialog","_formDialog"],c.render(!0,{top:"5%"})}static roll(e){new oRoll(this.setRollContext(e)).roll()}static setRollContext(e){let t=e.combatantid?game.combat.combatants.get(e.combatantid)?.actor:e.actorid?helperUtils.getActor(e.actorid,e.tokenid):null;if(e.target,e.target,e.target,e.target,"skill"===e.target){let o=t.items.get(e.skillid);if(!o)return;let s=t.system.skills[o.system.control.key];e.tab="main",e.rolltitle=o.name,e.rollbase=s.value,e.rollmod=s.modBase,e.rollcustomod=s.mod,e.rollbonus=Number(s.modBase)>0?Number(s.modBase)*Number(s.mult):0,Number(s.mod)>0&&(e.rollbonus=Math.round(Number(e.rollbonus)+Number(s.mod)*Number(s.mult))),e.rollpenal=0>Number(s.modBase)?Number(s.modBase)*Number(s.mult):0,0>Number(s.mod)&&(e.rollpenal=Math.round(Number(e.rollpenal)+Number(s.mod)*Number(s.mult))),e.rollvalue=s.valueTotal,e.rollluck=helperUtils.getChar(t.system,"luck")}return"study"===e.target&&(e.nohelps="true",e.smokeColor="#2f6931bd"),"luck"===e.target&&(e.rollbase=Number(e.rollbase),e.rollvalue=Number(e.rollvalue),e.nohelps="true",e.tab="main",e.smokeColor="#554400"),e.skillkey&&""!==e.skillkey&&(e.skillid=t.items.find(t=>"skill"===t.type&&t.system.control.key===e.skillkey)?.id),{target:e.target,subtarget:e.subtarget,actor:t,action:e.actionid?t.items.get(e.actionid):null,spell:e.spellid?t.items.get(e.spellid):null,ordoLevel:e.ordolevel,weapon:e.weaponid?t.items.get(e.weaponid):null,skill:e.skillid?t.items.get(e.skillid):null,item:e.itemid?t.items.get(e.itemid):null,step:e.stepid?game.items.find(e=>"encounter"===e.type&&e.system.combat===game.combat.id)?.system.steps.find(t=>t.id===e.stepid):null,fluxid:e.fluxid?e.fluxid:null,tab:e.tab?e.tab:null,roll:{auto:"true"===e.rollauto,title:e.rolltitle,anti:"true"===e.rollanti,simple:"true"===e.rollsimple,base:e.rollbase,mod:e.rollmod,customod:e.rollcustomod,bonus:e.rollbonus,penal:e.rollpenal,value:e.rollformula?e.rollformula:e.rollvalue,luck:e.rollluck,rollLevels:"true"===e.rolllevels,formula:e.rollformula?e.rollformula:"1D100",rollformula:!!e.rollformula},oppo:{title:e.rolltitleoppo,anti:!e.rollanti,simple:"true"===e.rollsimpleoppo,base:e.rollbaseoppo,mod:e.rollmodoppo,customod:e.rollcustomodoppo,bonus:e.rollbonusoppo,penal:e.rollpenaloppo,value:e.rollformulaoppo?e.rollformulaoppo:e.rollvalueoppo,luck:e.rollluckoppo,rollLevels:"true"===e.rolllevelsoppo,formula:e.rollformulaoppo?e.rollformulaoppo:"1D100",rollformula:!!e.rollformulaoppo},simpleMessage:{title:e.messtitle?e.messtitle:"",info:e.messinfo?JSON.parse(e.messinfo):{}},noHelps:"true"===e.nohelps,smokeColor:e.smokeColor?e.smokeColor:void 0}}static async addDialogLore(e,t,o={}){let s=e.system.control.rules;if(!s)return;let a=game.settings.get(game.system.id,t+"Roll"),l=await helperBackend.getCompendiumLore(t,s);if(!l||0===l.length)return;(l=this._filterLoreDocs(e,t,l)).map(t=>{t.system.roll=this._getLoreRollRange(e,t)}),l.sort(helperUtils.byName),l.sort((e,t)=>{let o=e.system.roll?.from?e.system.roll.from:e.system.range?.from?e.system.range.from:0,s=t.system.roll?.from?t.system.roll.from:t.system.range?.from?t.system.range.from:0;return Number(o)-Number(s)});let i='<formItems data-singular="true">';l.map(e=>{let o=e.system.roll?e.system.roll:e.system.range;i+=`<formItem 
                class="_loreFormItem ${e.system.custo?.background!==""&&e.system.custo?.background!==void 0?" _loreBackground":e.system.extend?.pride?" _pride":e.system.extend?.shame?" _shame":""}"
                data-itemid="${e.id}"
                data-rollfrom="${o.from?o.from:""}"
                data-rollto="${o.to?o.to:""}"
                data-formula="${a}"
                data-type="${t}"
                data-rules="${s}"
                style="${e.system.custo?.background!==""?"background-image: url("+e.system.custo?.background+")":""}">
                    <div class="_row">
                        <input type="checkbox"
                            id="item_${e.id}"
                            name="item_${e.id}"
                            itemid="${e.id}" />                                
                        <img class="_itemLogo" src="${e.img}"/>
                        <label for="item_${e.id}">[${o.from?o.from:""} - ${o.to?o.to:""}]  ${e.name}</label>
                        <label class="_trait">${e.system.extend?.pride?"["+game.i18n.localize("common.pride")+" "+e.system.extend.points+"pt. ]":e.system.extend?.shame?"["+game.i18n.localize("common.shame")+" "+e.system.extend.points+"pt. ]":""}</label>
                    </div>
                    <div class="_descr">${game.i18n.localize(e.system.description)}</div>
                </formItem>`}),i+="<formItems>";let r=new Dialog({title:game.i18n.localize("common.loreContext"),content:"<formDialog>"+i+"</formDialog>",buttons:{select:{class:"_dice",label:game.i18n.localize("common.rollDices"),callback:async(s,a)=>{$(s).find("formItems").find("input:checked").parents("formItem");let l=t,i=e.system.control.rules,r=$(s).find("formItems").find("input:checked")?.attr("itemid"),n=await helperBackend.getCompendiumLore(l,i),m=game.settings.get(game.system.id,l+"Roll");if(!r||""===r){let d=[];$(s).find("formItems").find("formItem").each((function(e,t){d.push({id:$(t).data("itemid"),from:Number($(t).data("rollfrom")),to:Number($(t).data("rollto"))})}).bind(this));let c=new Roll(m);await c.evaluate(),game.dice3d&&await game.dice3d.showForRoll(c),r=d.find(e=>e.from<=c.total&&e.to>=c.total)?.id}await this.addLoreItem(e,n.find(e=>e.id===r),o)}}}});r.options.classes=["dialog","_formDialog","_formLore"],r.render(!0,{top:"5%"})}static _filterLoreDocs(e,t,o){let s;return"loreNation"===t?(s=e.items.find(e=>"loreKingdom"===e.type),o.filter(e=>s?.system.nations.find(t=>t.key===e.system.control.key))):"loreStratum"===t?(s=e.items.find(e=>"loreSociety"===e.type),o.filter(e=>e.system.society===s?.system.control.key)):"lorePosition"===t?(s=e.items.find(e=>"loreStratum"===e.type),o.filter(e=>e.system.stratum===s?.system.control.key)):"loreProfession"===t?(s=e.items.find(e=>"loreStratum"===e.type),o.filter(e=>e.system.stratums.find(e=>e.key===s?.system.control.key))):o}static _getLoreRollRange(e,t){if("loreNation"===t.type){let o=e.items.find(e=>"loreKingdom"===e.type).system.nations.find(e=>e.key===t.system.control.key);return{from:o?.rollFrom,to:o?.rollTo}}if("loreProfession"!==t.type)return t.system.roll;{let s=e.items.find(e=>"loreStratum"===e.type),a=t.system.stratums.find(e=>e.key===s.system.control.key);return{from:a?.rollFrom,to:a?.rollTo}}}static async createLoreItem(e,t){let o={};"lorePaternProfession"===t&&(t="loreProfession",o={system:{patern:!0}}),helperSheets.addDialogLore(e,t,o)}static async addLoreItem(e,t,o={}){let s;if(t){if("loreProfession"===t.type){let a=[];e.items.filter(e=>e.type===t.type).map(e=>{!(o.system?.patern!==!0)===e.system.patern&&a.push(e.id)}),a.length>0&&await Item.deleteDocuments(a,{parent:e})}else"trait"===t.type||await this.deleteLoreItemsByType(e,t.type);if("loreNation"===t.type&&(await this.deleteLoreItemsByType(e,"loreSociety"),await Item.create(s=await this.getReferencedLoreItem("loreSociety",t.system.control.rules,t.system.society),{parent:e})),"loreProfession"===t.type){let l;if(0===e.items.filter(e=>"skill"===e.type).length){helperUtils.dialog("",game.i18n.localize("info.noSkillsProf"));return}}o.system?(await (await Item.create(t,{parent:e,render:!1})).update({system:{...t.system,...o.system}}),e.render(!0)):await Item.create(t,{parent:e})}}static async deleteLoreItem(e,t){if(!t)return;let o=[];for(var s of("loreKingdom"===t.type&&(o=["loreNation","loreSociety","loreStratum","lorePosition","loreProfession"]),"loreNation"===t.type&&(o=["loreSociety","loreStratum","lorePosition","loreProfession"]),"loreSociety"===t.type&&(o=["loreNation","loreStratum","lorePosition","loreProfession"]),"loreStratum"===t.type&&(o=["lorePosition","loreProfession"]),"lorePosition"===t.type&&(o=["loreProfession"]),o))await this.deleteLoreItemsByType(e,s);if("loreProfession"===t.type){let a=[];e.items.filter(e=>e.type===t.type).map(e=>{e.system.patern===t.system.patern&&a.push(e.id)}),a.length>0&&await Item.deleteDocuments(a,{parent:e})}else await this.deleteLoreItemsByType(e,t.type)}static async deleteAllLoreItems(e){for(var t of["loreKingdom","loreNation","loreSociety","loreStratum","lorePosition","loreProfession"])await this.deleteLoreItemsByType(e,t)}static async deleteLoreItemsByType(e,t){let o=[];e.items.filter(e=>e.type===t).map(e=>{o.push(e.id)}),o.length>0&&await Item.deleteDocuments(o,{parent:e})}static async getReferencedLoreItem(e,t,o){return(await helperBackend.getCompendiumLore(e,t)).find(e=>e.system.control.key===o)}static async addingProfession(e){let t=e.parent,o=t.items.find(e=>"loreProfession"===e.type);if(o){for(var s in o.system.weaponLevels)o.system.weaponLevels[s]&&o.system.weaponLevels[s].check&&t.system.weaponLevels[s]&&(t.system.weaponLevels[s].check=!0);await t.update({"system.weaponLevels":t.system.weaponLevels})}}static async addingTrait(item){if("trait"!==item.type)return;let actor=item.parent,strMods=helperUtils.clearTags(item.system.strMods).replaceAll("[","").replaceAll("]",""),oData={};try{oData=JSON.parse("{"+strMods+"}")}catch(e){ui.notifications.error("Error interpreting trait modifiers")}""!==item.system.female.trim()&&actor.system.attributes.female&&(item.name=item.system.female);let dataUpdate={};item.system.record="";let nIndex=0;for(var sPath in oData){let sExprInit=oData[sPath],sExpr=oData[sPath],mPrior=[],mPriorSolved=[];if(sExpr.split("}}").length>1){for(var sExpr0 of(sExpr.split("}}").map(e=>{let t=e.split("{{")[1];t&&mPrior.push(e.split("{{")[1])}),mPrior)){let value="";if(helperUtils.isActorPathProperty(sExpr0.trim()))value=helperUtils.getActorProperty(sExpr0.trim(),actor);else{ui.notifications.info(game.i18n.localize("info.evaluateTraitRoll")+item.name+" ( "+sExpr0.trim()+" ) ");let diceRoll=new Roll(sExpr0.trim());await diceRoll.evaluate(),game.dice3d&&await game.dice3d.showForRoll(diceRoll),value=diceRoll.total}sExpr=sExpr.replace(sExpr0,value)}sExpr=sExpr.replaceAll("{{","").replaceAll("}}","")}let operator=["+","-","*","="].find(e=>e===sExpr.trim()[0])?sExpr.trim()[0]:"=",actorProperty=helperUtils.getActorProperty(sPath,actor),actorProperty0="",bError,target="";try{if("+"===operator||"-"===operator)sPath+=actorProperty?.mod?".mod":"",target=sPath.split(".")[sPath.split(".").length-1],bError=void 0===(actorProperty=actorProperty?.mod?actorProperty.mod:actorProperty),actorProperty0=actorProperty,actorProperty="mod"===target?helperUtils.sumMods([actorProperty,sExpr]):Number(actorProperty)+Number(sExpr);else{if("*"!==operator&&"="!==operator)return;sPath+=actorProperty.value?".value":"",target=sPath.split(".")[sPath.split(".").length-1],bError=void 0===(actorProperty=actorProperty?.value?actorProperty.value:actorProperty),actorProperty0=actorProperty,actorProperty="*"===operator?Math.round(Number(eval(actorProperty.toString()+sExpr))):sExpr}}catch(e){bError=!0}let sTitle=helperUtils.getTitleFromPath(sPath);item.system.record+='"'+nIndex.toString()+'": '+JSON.stringify({path:sPath,title:sTitle,operator:operator,value0:actorProperty0,value:actorProperty,expr0:sExprInit,expr:sExpr,error:bError||"!Error"===sTitle})+" , ",bError||(dataUpdate[sPath=1===sPath.split("system").length?"system."+sPath:sPath]=actorProperty),nIndex++}item.system.record=("{"+item.system.record+"}").replace("} , }","}}"),await item.update({name:item.name,"system.record":item.system.record}),Object.keys(dataUpdate).length>0&&await actor.update(dataUpdate)}static async applyDamage(e,t,o="",s="",a=!1,l=!1){a=!!a&&a,l=!!l&&l;let i=game.combat;if(!i)return;let r=i.combatants.get(e);if(!r)return;let n=r.actor,m="";if(a){let d=n.items.get(n.system.control.combat.weapon.second);if(!d||!d.system.shield)return;l?(await helperSocket.deleteItem(d),this.messageDamage(n,m,Number(t),!0,!0)):(await helperSocket.updateItem(d,{"system.endurance":d.system.endurance-Number(t)}),this.messageDamage(n,m,Number(t),!0,!1))}else m=n.system.secondaries.hits.value-Number(t),await helperSocket.updateActor(n,{"system.secondaries.hits.value":n.system.secondaries.hits.value-Number(t)}),this.messageDamage(n,m,Number(t));this.updateRoll(n,o,s,t)}static messageDamage(e,t,o,s=!1,a=!1){let l="",i=`<div class="_roll">
                            <div class="_hexCombatant">
                                <div class="_img" style="background-image: url(${e.img})"></div>
                            </div>
                            <div class="_hexCombatantFrame"></div>
                            <div class="_hexAction">
                                <div class="_img" style="background-image: url(${helperUtils.assetsPath()}/icons/damage.svg)">
                                    <label class="_title _showItemInfo _whiteBorderHard">
                                           ${game.i18n.localize("common.damage")}</label>
                                    <label>${e.name}</label>
                                </div>
                            </div>
                            <div class="_hexRoll">
                                <div class="_contentRoll">
                                    <div class="_rollStats">
                                        ${l=(a=!!a&&a)?`<div class="_statRow" style="padding-left: 20%;">
                            <label>${game.i18n.localize("common.breakShield")}</label>
                        </div>`:(s=!!s&&s)?`<div class="_statRow" style="padding-left: 20%;">
                            <label>${game.i18n.localize("common.damageShield")}</label>
                            <label class="_stat">- ${o} Pt.</label>
                        </div>`:`<div class="_statRow" style="padding-left: 20%;">
                            <label>${game.i18n.localize("common.damagePoints")}</label>
                            <label class="_stat">- ${o} Pt.</label>
                        </div>
                        <div class="_statRow" style="padding-left: 13%;">
                            <label>${game.i18n.localize("common.hitPointsFinal")}</label>
                            <label class="_stat">${t} Pt.</label>
                        </div>`}                                                                     
                                    </div>                                        
                                </div>
                            </div>
                        </div>`;helperMessages.chatMessage(i)}static updateRoll(e,t,o,s){helperCombat.updateRollEncounter({_step:{id:t},_fluxId:o,_actor:e,_target:"hits",_roll:{anti:!1},_result:s,_rollLevel:!1})}static async openCompendium(e){let t=game.system.id+"."+e,o=game.packs.get(t);o&&o.render(!0)}static async importSkills(e){let t=(await game.packs.get(game.system.id+".skills").getDocuments()).filter(t=>t.system.basic[e.system.control.rules]?.initial);for(var o of t)Array.from(e.items).find(e=>e.system.control.key===o.system.control.key)||await Item.create(o,{parent:e})}static async importActions(e){let t=(await game.packs.get(game.system.id+".actions").getDocuments()).filter(t=>t.system.basic&&t.system.control.rules===e.system.control.rules);for(var o of t)Array.from(e.items).find(e=>e.system.control.key===o.system.control.key)||await Item.create(o,{parent:e})}static async deleteAllItems(e,t){let o=[];e.items.filter(e=>e.type===t).map(e=>o.push(e._id)),0!==o.length&&await Item.deleteDocuments(o,{parent:e})}static seeSummary(e,t){let o=e.items.get(t);if(!o)return;let s=new Dialog({title:o.name,content:(o.system.requirements&&""!==o.system.requirements?`<h1>${game.i18n.localize("common.requirements")}</h1>${o.system.requirements}`:"")+(o.system.abstract&&""!==o.system.abstract?`<h1>${game.i18n.localize("common.abstract")}</h1>${o.system.abstract}`:"")+(o.system.description&&""!==o.system.description?`<h1>${game.i18n.localize("common.description")}</h1>${o.system.description}`:""),buttons:{}});s.options.classes=["dialog","_summary"],s.render(!0,{top:"5%"})}static _sheetCommon(e,t){$(e.form)[0].style.setProperty("--buttonHeight",(.043*$("body").height()).toFixed(2).toString()+"px"),$(e.form)[0].style.setProperty("--buttonFontSize",(.028*$("body").height()).toFixed(2).toString()+"px"),$(e.form).find("a._frameButton").each((function(e,t){let o=$(t).find("button");if(0===o.length)return;let s=o.data("img")?"/systems/"+game.system.id+"/assets/"+o.data("img"):null;s&&o.append(`<img src="${s}"></img>`);let a=o.data("label")?game.i18n.localize(o.data("label")):null;a&&o.append(`<label>${a}</label>`),o.data("icon")&&$(t).addClass("_icon"),o.data("big")&&$(t).addClass("_big")}).bind(this))}static activeTab(e,t){e.activateTab(t),delete e.activeTab}static addLoreProperty(e){let t=$(e.currentTarget),o=t.parent(),s={key:o.find("._selector :selected").val()},a=$(e.currentTarget).data("properties");return a&&a.map(e=>{switch(e.toLowerCase()){case"value":s.value=Number(o.find("._selectValue").val());break;case"group":s.group=o.find("._selectGroup").val()&&""!==o.find("._selectGroup").val()&&0!==Number(o.find("._selectGroup").val())?Number(o.find("._selectGroup").val()):"";break;case"expression":s.expression=o.find("._selectExpression").val();break;case"rollfrom":s.rollFrom=Number(o.find("._selectRollFrom").val());break;case"rollto":s.rollTo=Number(o.find("._selectRollTo").val())}}),s}}