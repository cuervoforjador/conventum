export class helperSocket{static socketAlias="system.aquelarre";static onReceived(){game.socket.on(this.socketAlias,e=>{switch(console.log("--- "+game.system.title+" Socket ---"),e.action){case"refreshAllSheets":helperSocket._doRefreshAllSheets(e);break;case"updateInCascade":helperSocket._directUpdateInCascade(e);case"updateEncounter":case"updateActor":case"updateMessage":case"updateItem":helperSocket._directUpdate(e);break;case"deleteItem":helperSocket._directDelete(e);break;case"addItemToActor":helperSocket._directAddItem(e);break;case"addTokenEffect":helperSocket._addTokenEffect(e)}})}static send(e){e&&(this._checkTokens(e),game.socket.emit(this.socketAlias,this._payloadHeader(e)))}static refreshAllSheets(){helperSocket.send({action:"refreshAllSheets"}),this._doRefreshAllSheets()}static async updateInCascade(e,t=!1){if(t=!!t&&t,game.user.isGM){for(var s of e)await s.entity.update(s.data);t&&this.refreshAllSheets()}else helperSocket.send({action:"updateInCascade",orders:e,refreshAll:t})}static async updateEncounter(e,t){game.user.isGM?(await e.update(t),this.refreshAllSheets()):helperSocket.send({action:"updateEncounter",entity:e,data:t})}static async updateMessage(e,t){game.user.isGM?(await e.update(t),this.refreshAllSheets()):helperSocket.send({action:"updateMessage",entity:e,data:t})}static async updateActor(e,t){game.user.isGM?(await e.update(t),this.refreshAllSheets()):helperSocket.send({action:"updateActor",entity:e,data:t})}static async addItemToActor(e,t,s){s=!!s&&s,game.user.isGM?(await Item.create(t,{parent:e}),s&&this.refreshAllSheets()):helperSocket.send({action:"addItemToActor",entity:e,data:t,refreshAll:s})}static async updateItem(e,t){game.user.isGM?(await e.update(t),this.refreshAllSheets()):helperSocket.send({action:"updateItem",entity:e,data:t})}static async deleteItem(e){game.user.isGM?(await e.delete(),this.refreshAllSheets()):helperSocket.send({action:"deleteItem",entity:e,data:{}})}static async addTokenEffect(e,t){game.user.isGM?e.createEmbeddedDocuments("ActiveEffect",[t]):helperSocket.send({action:"addTokenEffect",entity:e,data:t})}static _payloadHeader(e){return{action:e.action?e.action:"",entity:e.entity?e.entity:"",id:e.id?e.id:"",actorId:e.actorId?e.actorId:"",tokenId:e.tokenId?e.tokenId:"",userId:e.userId?e.userId:game.userId,data:e.data?e.data:{},force:!1,refreshAll:!!e.refreshAll&&e.refreshAll,orders:e.orders?e.orders:[]}}static _getEntity(e){game.actors.get(e.entity._id)&&(e.token?.isToken?e.entity=game.scenes.active.tokens.get(e.token.tokenId).getActor():e.entity=game.actors.get(e.entity._id)),game.items.get(e.entity._id)&&(e.entity=game.items.get(e.entity._id)),game.combats.get(e.entity._id)&&(e.entity=game.combats.get(e.entity._id)),game.messages.get(e.entity._id)&&(e.entity=game.messages.get(e.entity._id))}static _doRefreshAllSheets(){Array.from(game.scenes.active.tokens).filter(e=>e.actor?.isToken).forEach(e=>{1===$("#"+e.sheet.id.replace("TokenConfig","extendSheetHuman")+"-Actor-"+e.getActor().id).length&&e.getActor().sheet.render(!0)}),Array.from(game.actors).filter(e=>e.sheet.rendered).map(e=>{e.sheet.render(!0)})}static async _directUpdate(e){game.user.isGM&&(this._getEntity(e),await e.entity.update(e.data),this.refreshAllSheets())}static async _directDelete(e){game.user.isGM&&(this._getEntity(e),await e.entity.delete(),this.refreshAllSheets())}static async _directUpdateInCascade(e){if(game.user.isGM&&e&&e.orders&&0!==e.orders.legnth){for(var t of e.orders)this._getEntity(t),await t.entity.update(t.data);e.refreshAll&&this.refreshAllSheets()}}static async _directAddItem(e){let t=!!e.refreshAll&&e.refreshAll;game.user.isGM&&(this._getEntity(e),await Item.create(e.data,{parent:e.entity}),t&&this.refreshAllSheets())}static async _addTokenEffect(e){game.user.isGM&&(this._getEntity(e),e.entity&&""!==e.entity&&e.entity.createEmbeddedDocuments("ActiveEffect",[e.data]))}static _checkTokens(e){if(e.orders&&e.orders.length>0)for(var t of e.orders)t.token=this._setTokenExtend(t.entity);e.entity&&(e.token=this._setTokenExtend(e.entity))}static _setTokenExtend(e){return{entityId:e.id,tokenId:e.token?.id,isToken:!!e.isToken&&e.isToken}}}